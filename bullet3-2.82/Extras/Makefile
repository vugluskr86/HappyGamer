# Makefile.in generated by automake 1.14.1 from Makefile.am.
# Extras/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/bullet
pkgincludedir = $(includedir)/bullet
pkglibdir = $(libdir)/bullet
pkglibexecdir = $(libexecdir)/bullet
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = Extras
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libHACD_a_AR = $(AR) $(ARFLAGS)
libHACD_a_LIBADD =
am_libHACD_a_OBJECTS = libHACD_a-hacdGraph.$(OBJEXT) \
	libHACD_a-hacdHACD.$(OBJEXT) libHACD_a-hacdICHull.$(OBJEXT) \
	libHACD_a-hacdManifoldMesh.$(OBJEXT)
libHACD_a_OBJECTS = $(am_libHACD_a_OBJECTS)
libconvexdecomposition_a_AR = $(AR) $(ARFLAGS)
libconvexdecomposition_a_LIBADD =
am_libconvexdecomposition_a_OBJECTS =  \
	libconvexdecomposition_a-concavity.$(OBJEXT) \
	libconvexdecomposition_a-ConvexDecomposition.$(OBJEXT) \
	libconvexdecomposition_a-vlookup.$(OBJEXT) \
	libconvexdecomposition_a-bestfit.$(OBJEXT) \
	libconvexdecomposition_a-ConvexBuilder.$(OBJEXT) \
	libconvexdecomposition_a-cd_hull.$(OBJEXT) \
	libconvexdecomposition_a-raytri.$(OBJEXT) \
	libconvexdecomposition_a-splitplane.$(OBJEXT) \
	libconvexdecomposition_a-float_math.$(OBJEXT) \
	libconvexdecomposition_a-planetri.$(OBJEXT) \
	libconvexdecomposition_a-cd_wavefront.$(OBJEXT) \
	libconvexdecomposition_a-bestfitobb.$(OBJEXT) \
	libconvexdecomposition_a-meshvolume.$(OBJEXT) \
	libconvexdecomposition_a-fitsphere.$(OBJEXT)
libconvexdecomposition_a_OBJECTS =  \
	$(am_libconvexdecomposition_a_OBJECTS)
libgimpactutils_a_AR = $(AR) $(ARFLAGS)
libgimpactutils_a_LIBADD =
am_libgimpactutils_a_OBJECTS =  \
	libgimpactutils_a-btGImpactConvexDecompositionShape.$(OBJEXT)
libgimpactutils_a_OBJECTS = $(am_libgimpactutils_a_OBJECTS)
libglui_a_AR = $(AR) $(ARFLAGS)
libglui_a_LIBADD =
am_libglui_a_OBJECTS = libglui_a-glui_spinner.$(OBJEXT) \
	libglui_a-glui_treepanel.$(OBJEXT) libglui_a-arcball.$(OBJEXT) \
	libglui_a-glui_scrollbar.$(OBJEXT) \
	libglui_a-glui_filebrowser.$(OBJEXT) \
	libglui_a-glui_node.$(OBJEXT) \
	libglui_a-glui_edittext.$(OBJEXT) \
	libglui_a-glui_statictext.$(OBJEXT) \
	libglui_a-glui_bitmaps.$(OBJEXT) libglui_a-algebra3.$(OBJEXT) \
	libglui_a-glui_string.$(OBJEXT) \
	libglui_a-glui_button.$(OBJEXT) \
	libglui_a-glui_add_controls.$(OBJEXT) \
	libglui_a-glui_control.$(OBJEXT) libglui_a-glui.$(OBJEXT) \
	libglui_a-glui_listbox.$(OBJEXT) \
	libglui_a-glui_checkbox.$(OBJEXT) \
	libglui_a-glui_commandline.$(OBJEXT) \
	libglui_a-glui_textbox.$(OBJEXT) \
	libglui_a-glui_column.$(OBJEXT) \
	libglui_a-glui_mouse_iaction.$(OBJEXT) \
	libglui_a-glui_radio.$(OBJEXT) \
	libglui_a-glui_translation.$(OBJEXT) \
	libglui_a-glui_tree.$(OBJEXT) \
	libglui_a-glui_rotation.$(OBJEXT) \
	libglui_a-glui_panel.$(OBJEXT) \
	libglui_a-glui_rollout.$(OBJEXT) \
	libglui_a-glui_separator.$(OBJEXT) \
	libglui_a-glui_bitmap_img_data.$(OBJEXT) \
	libglui_a-quaternion.$(OBJEXT) libglui_a-glui_window.$(OBJEXT) \
	libglui_a-glui_list.$(OBJEXT)
libglui_a_OBJECTS = $(am_libglui_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libHACD_a_SOURCES) $(libconvexdecomposition_a_SOURCES) \
	$(libgimpactutils_a_SOURCES) $(libglui_a_SOURCES)
DIST_SOURCES = $(libHACD_a_SOURCES) \
	$(libconvexdecomposition_a_SOURCES) \
	$(libgimpactutils_a_SOURCES) $(libglui_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/vugluskr/projects/HappyGamer/bullet3-2.82/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = /raid/vugluskr/emsdk_portable/emscripten/master/emar
AUTOCONF = ${SHELL} /home/vugluskr/projects/HappyGamer/bullet3-2.82/missing autoconf
AUTOHEADER = ${SHELL} /home/vugluskr/projects/HappyGamer/bullet3-2.82/missing autoheader
AUTOMAKE = ${SHELL} /home/vugluskr/projects/HappyGamer/bullet3-2.82/missing automake-1.14
AWK = mawk
CC = /raid/vugluskr/emsdk_portable/emscripten/master/emcc
CCDEPMODE = depmode=gcc3
CFLAGS = -DUSE_ADDR64 
CPP = /raid/vugluskr/emsdk_portable/emscripten/master/emcc -E
CPPFLAGS = 
CXX = /raid/vugluskr/emsdk_portable/emscripten/master/em++
CXXCPP = /raid/vugluskr/emsdk_portable/emscripten/master/em++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -DUSE_ADDR64 -g -O2 -DUSE_ADDR64 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GL_LIBS = -lglu32 -lopengl32
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /raid/vugluskr/emsdk_portable/emscripten/master/emcc
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/vugluskr/projects/HappyGamer/bullet3-2.82/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /raid/vugluskr/emsdk_portable/clang/fastcomp/build_master_64/bin/llvm-nm
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = bullet
PACKAGE_BUGREPORT = erwin.coumans@gmail.com
PACKAGE_NAME = bullet
PACKAGE_STRING = bullet 2.82
PACKAGE_TARNAME = bullet
PACKAGE_URL = 
PACKAGE_VERSION = 2.82
PATH_SEPARATOR = :
RANLIB = /raid/vugluskr/emsdk_portable/emscripten/master/emranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2.82
abs_builddir = /home/vugluskr/projects/HappyGamer/bullet3-2.82/Extras
abs_srcdir = /home/vugluskr/projects/HappyGamer/bullet3-2.82/Extras
abs_top_builddir = /home/vugluskr/projects/HappyGamer/bullet3-2.82
abs_top_srcdir = /home/vugluskr/projects/HappyGamer/bullet3-2.82
ac_ct_AR = 
ac_ct_CC = /raid/vugluskr/emsdk_portable/emscripten/master/emcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/vugluskr/projects/HappyGamer/bullet3-2.82/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
opengl_LIBS = -lGL -lGLU -lglut
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
noinst_LIBRARIES = libgimpactutils.a libconvexdecomposition.a libHACD.a libglui.a
libglui_a_CXXFLAGS = ${CXXFLAGS} -Iglui
libglui_a_SOURCES = \
		glui/glui_spinner.cpp\
		glui/glui_treepanel.cpp\
		glui/arcball.cpp\
		glui/glui_scrollbar.cpp\
		glui/glui_filebrowser.cpp\
		glui/glui_node.cpp\
		glui/glui_edittext.cpp\
		glui/glui_statictext.cpp\
		glui/glui_bitmaps.cpp\
		glui/algebra3.cpp\
		glui/glui_string.cpp\
		glui/glui_button.cpp\
		glui/glui_add_controls.cpp\
		glui/glui_control.cpp\
		glui/glui.cpp\
		glui/glui_listbox.cpp\
		glui/glui_checkbox.cpp\
		glui/glui_commandline.cpp\
		glui/glui_textbox.cpp\
		glui/glui_column.cpp\
		glui/glui_mouse_iaction.cpp\
		glui/glui_radio.cpp\
		glui/glui_translation.cpp\
		glui/glui_tree.cpp\
		glui/glui_rotation.cpp\
		glui/glui_panel.cpp\
		glui/glui_rollout.cpp\
		glui/glui_separator.cpp\
		glui/glui_bitmap_img_data.cpp\
		glui/quaternion.cpp\
		glui/glui_window.cpp\
		glui/glui_list.cpp\
		glui/GL/glui.h\
		glui/quaternion.h\
		glui/glui_internal.h\
		glui/glui_internal_control.h\
		glui/arcball.h\
		glui/algebra3.h

libconvexdecomposition_a_CXXFLAGS = ${CXXFLAGS} -IConvexDecomposition/ -I../src
libconvexdecomposition_a_SOURCES = \
		ConvexDecomposition/concavity.cpp\
		ConvexDecomposition/ConvexDecomposition.cpp\
		ConvexDecomposition/vlookup.cpp\
		ConvexDecomposition/bestfit.cpp\
		ConvexDecomposition/ConvexBuilder.cpp\
		ConvexDecomposition/cd_hull.cpp\
		ConvexDecomposition/raytri.cpp\
		ConvexDecomposition/splitplane.cpp\
		ConvexDecomposition/float_math.cpp\
		ConvexDecomposition/planetri.cpp\
		ConvexDecomposition/cd_wavefront.cpp\
		ConvexDecomposition/bestfitobb.cpp\
		ConvexDecomposition/meshvolume.cpp\
		ConvexDecomposition/fitsphere.cpp\
		ConvexDecomposition/fitsphere.h\
		ConvexDecomposition/vlookup.h\
		ConvexDecomposition/concavity.h\
		ConvexDecomposition/ConvexDecomposition.h\
		ConvexDecomposition/bestfit.h\
		ConvexDecomposition/cd_vector.h\
		ConvexDecomposition/ConvexBuilder.h\
		ConvexDecomposition/cd_hull.h\
		ConvexDecomposition/raytri.h\
		ConvexDecomposition/splitplane.h\
		ConvexDecomposition/float_math.h\
		ConvexDecomposition/planetri.h\
		ConvexDecomposition/cd_wavefront.h\
		ConvexDecomposition/bestfitobb.h\
		ConvexDecomposition/meshvolume.h

libHACD_a_CXXFLAGS = ${CXXFLAGS} -IHACD/ -I../src
libHACD_a_SOURCES = \
		HACD/hacdGraph.cpp\
		HACD/hacdHACD.cpp\
		HACD/hacdICHull.cpp\
		HACD/hacdManifoldMesh.cpp\
		HACD/hacdCircularList.h\
		HACD/hacdGraph.h\
		HACD/hacdHACD.h\
		HACD/hacdICHull.h\
		HACD/hacdManifoldMesh.h\
		HACD/hacdVector.h\
		HACD/hacdVersion.h\
		HACD/hacdCircularList.inl\
		HACD/hacdVector.inl

libgimpactutils_a_CXXFLAGS = ${CXXFLAGS}  -I../src -IGIMPACTUtils -IConvexDecomposition
libgimpactutils_a_SOURCES = GIMPACTUtils/btGImpactConvexDecompositionShape.cpp GIMPACTUtils/btGImpactConvexDecompositionShape.h
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Extras/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Extras/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libHACD.a: $(libHACD_a_OBJECTS) $(libHACD_a_DEPENDENCIES) $(EXTRA_libHACD_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libHACD.a
	$(AM_V_AR)$(libHACD_a_AR) libHACD.a $(libHACD_a_OBJECTS) $(libHACD_a_LIBADD)
	$(AM_V_at)$(RANLIB) libHACD.a

libconvexdecomposition.a: $(libconvexdecomposition_a_OBJECTS) $(libconvexdecomposition_a_DEPENDENCIES) $(EXTRA_libconvexdecomposition_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libconvexdecomposition.a
	$(AM_V_AR)$(libconvexdecomposition_a_AR) libconvexdecomposition.a $(libconvexdecomposition_a_OBJECTS) $(libconvexdecomposition_a_LIBADD)
	$(AM_V_at)$(RANLIB) libconvexdecomposition.a

libgimpactutils.a: $(libgimpactutils_a_OBJECTS) $(libgimpactutils_a_DEPENDENCIES) $(EXTRA_libgimpactutils_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libgimpactutils.a
	$(AM_V_AR)$(libgimpactutils_a_AR) libgimpactutils.a $(libgimpactutils_a_OBJECTS) $(libgimpactutils_a_LIBADD)
	$(AM_V_at)$(RANLIB) libgimpactutils.a

libglui.a: $(libglui_a_OBJECTS) $(libglui_a_DEPENDENCIES) $(EXTRA_libglui_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libglui.a
	$(AM_V_AR)$(libglui_a_AR) libglui.a $(libglui_a_OBJECTS) $(libglui_a_LIBADD)
	$(AM_V_at)$(RANLIB) libglui.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libHACD_a-hacdGraph.Po
include ./$(DEPDIR)/libHACD_a-hacdHACD.Po
include ./$(DEPDIR)/libHACD_a-hacdICHull.Po
include ./$(DEPDIR)/libHACD_a-hacdManifoldMesh.Po
include ./$(DEPDIR)/libconvexdecomposition_a-ConvexBuilder.Po
include ./$(DEPDIR)/libconvexdecomposition_a-ConvexDecomposition.Po
include ./$(DEPDIR)/libconvexdecomposition_a-bestfit.Po
include ./$(DEPDIR)/libconvexdecomposition_a-bestfitobb.Po
include ./$(DEPDIR)/libconvexdecomposition_a-cd_hull.Po
include ./$(DEPDIR)/libconvexdecomposition_a-cd_wavefront.Po
include ./$(DEPDIR)/libconvexdecomposition_a-concavity.Po
include ./$(DEPDIR)/libconvexdecomposition_a-fitsphere.Po
include ./$(DEPDIR)/libconvexdecomposition_a-float_math.Po
include ./$(DEPDIR)/libconvexdecomposition_a-meshvolume.Po
include ./$(DEPDIR)/libconvexdecomposition_a-planetri.Po
include ./$(DEPDIR)/libconvexdecomposition_a-raytri.Po
include ./$(DEPDIR)/libconvexdecomposition_a-splitplane.Po
include ./$(DEPDIR)/libconvexdecomposition_a-vlookup.Po
include ./$(DEPDIR)/libgimpactutils_a-btGImpactConvexDecompositionShape.Po
include ./$(DEPDIR)/libglui_a-algebra3.Po
include ./$(DEPDIR)/libglui_a-arcball.Po
include ./$(DEPDIR)/libglui_a-glui.Po
include ./$(DEPDIR)/libglui_a-glui_add_controls.Po
include ./$(DEPDIR)/libglui_a-glui_bitmap_img_data.Po
include ./$(DEPDIR)/libglui_a-glui_bitmaps.Po
include ./$(DEPDIR)/libglui_a-glui_button.Po
include ./$(DEPDIR)/libglui_a-glui_checkbox.Po
include ./$(DEPDIR)/libglui_a-glui_column.Po
include ./$(DEPDIR)/libglui_a-glui_commandline.Po
include ./$(DEPDIR)/libglui_a-glui_control.Po
include ./$(DEPDIR)/libglui_a-glui_edittext.Po
include ./$(DEPDIR)/libglui_a-glui_filebrowser.Po
include ./$(DEPDIR)/libglui_a-glui_list.Po
include ./$(DEPDIR)/libglui_a-glui_listbox.Po
include ./$(DEPDIR)/libglui_a-glui_mouse_iaction.Po
include ./$(DEPDIR)/libglui_a-glui_node.Po
include ./$(DEPDIR)/libglui_a-glui_panel.Po
include ./$(DEPDIR)/libglui_a-glui_radio.Po
include ./$(DEPDIR)/libglui_a-glui_rollout.Po
include ./$(DEPDIR)/libglui_a-glui_rotation.Po
include ./$(DEPDIR)/libglui_a-glui_scrollbar.Po
include ./$(DEPDIR)/libglui_a-glui_separator.Po
include ./$(DEPDIR)/libglui_a-glui_spinner.Po
include ./$(DEPDIR)/libglui_a-glui_statictext.Po
include ./$(DEPDIR)/libglui_a-glui_string.Po
include ./$(DEPDIR)/libglui_a-glui_textbox.Po
include ./$(DEPDIR)/libglui_a-glui_translation.Po
include ./$(DEPDIR)/libglui_a-glui_tree.Po
include ./$(DEPDIR)/libglui_a-glui_treepanel.Po
include ./$(DEPDIR)/libglui_a-glui_window.Po
include ./$(DEPDIR)/libglui_a-quaternion.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libHACD_a-hacdGraph.o: HACD/hacdGraph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -MT libHACD_a-hacdGraph.o -MD -MP -MF $(DEPDIR)/libHACD_a-hacdGraph.Tpo -c -o libHACD_a-hacdGraph.o `test -f 'HACD/hacdGraph.cpp' || echo '$(srcdir)/'`HACD/hacdGraph.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libHACD_a-hacdGraph.Tpo $(DEPDIR)/libHACD_a-hacdGraph.Po
#	$(AM_V_CXX)source='HACD/hacdGraph.cpp' object='libHACD_a-hacdGraph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -c -o libHACD_a-hacdGraph.o `test -f 'HACD/hacdGraph.cpp' || echo '$(srcdir)/'`HACD/hacdGraph.cpp

libHACD_a-hacdGraph.obj: HACD/hacdGraph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -MT libHACD_a-hacdGraph.obj -MD -MP -MF $(DEPDIR)/libHACD_a-hacdGraph.Tpo -c -o libHACD_a-hacdGraph.obj `if test -f 'HACD/hacdGraph.cpp'; then $(CYGPATH_W) 'HACD/hacdGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/HACD/hacdGraph.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libHACD_a-hacdGraph.Tpo $(DEPDIR)/libHACD_a-hacdGraph.Po
#	$(AM_V_CXX)source='HACD/hacdGraph.cpp' object='libHACD_a-hacdGraph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -c -o libHACD_a-hacdGraph.obj `if test -f 'HACD/hacdGraph.cpp'; then $(CYGPATH_W) 'HACD/hacdGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/HACD/hacdGraph.cpp'; fi`

libHACD_a-hacdHACD.o: HACD/hacdHACD.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -MT libHACD_a-hacdHACD.o -MD -MP -MF $(DEPDIR)/libHACD_a-hacdHACD.Tpo -c -o libHACD_a-hacdHACD.o `test -f 'HACD/hacdHACD.cpp' || echo '$(srcdir)/'`HACD/hacdHACD.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libHACD_a-hacdHACD.Tpo $(DEPDIR)/libHACD_a-hacdHACD.Po
#	$(AM_V_CXX)source='HACD/hacdHACD.cpp' object='libHACD_a-hacdHACD.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -c -o libHACD_a-hacdHACD.o `test -f 'HACD/hacdHACD.cpp' || echo '$(srcdir)/'`HACD/hacdHACD.cpp

libHACD_a-hacdHACD.obj: HACD/hacdHACD.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -MT libHACD_a-hacdHACD.obj -MD -MP -MF $(DEPDIR)/libHACD_a-hacdHACD.Tpo -c -o libHACD_a-hacdHACD.obj `if test -f 'HACD/hacdHACD.cpp'; then $(CYGPATH_W) 'HACD/hacdHACD.cpp'; else $(CYGPATH_W) '$(srcdir)/HACD/hacdHACD.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libHACD_a-hacdHACD.Tpo $(DEPDIR)/libHACD_a-hacdHACD.Po
#	$(AM_V_CXX)source='HACD/hacdHACD.cpp' object='libHACD_a-hacdHACD.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -c -o libHACD_a-hacdHACD.obj `if test -f 'HACD/hacdHACD.cpp'; then $(CYGPATH_W) 'HACD/hacdHACD.cpp'; else $(CYGPATH_W) '$(srcdir)/HACD/hacdHACD.cpp'; fi`

libHACD_a-hacdICHull.o: HACD/hacdICHull.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -MT libHACD_a-hacdICHull.o -MD -MP -MF $(DEPDIR)/libHACD_a-hacdICHull.Tpo -c -o libHACD_a-hacdICHull.o `test -f 'HACD/hacdICHull.cpp' || echo '$(srcdir)/'`HACD/hacdICHull.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libHACD_a-hacdICHull.Tpo $(DEPDIR)/libHACD_a-hacdICHull.Po
#	$(AM_V_CXX)source='HACD/hacdICHull.cpp' object='libHACD_a-hacdICHull.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -c -o libHACD_a-hacdICHull.o `test -f 'HACD/hacdICHull.cpp' || echo '$(srcdir)/'`HACD/hacdICHull.cpp

libHACD_a-hacdICHull.obj: HACD/hacdICHull.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -MT libHACD_a-hacdICHull.obj -MD -MP -MF $(DEPDIR)/libHACD_a-hacdICHull.Tpo -c -o libHACD_a-hacdICHull.obj `if test -f 'HACD/hacdICHull.cpp'; then $(CYGPATH_W) 'HACD/hacdICHull.cpp'; else $(CYGPATH_W) '$(srcdir)/HACD/hacdICHull.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libHACD_a-hacdICHull.Tpo $(DEPDIR)/libHACD_a-hacdICHull.Po
#	$(AM_V_CXX)source='HACD/hacdICHull.cpp' object='libHACD_a-hacdICHull.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -c -o libHACD_a-hacdICHull.obj `if test -f 'HACD/hacdICHull.cpp'; then $(CYGPATH_W) 'HACD/hacdICHull.cpp'; else $(CYGPATH_W) '$(srcdir)/HACD/hacdICHull.cpp'; fi`

libHACD_a-hacdManifoldMesh.o: HACD/hacdManifoldMesh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -MT libHACD_a-hacdManifoldMesh.o -MD -MP -MF $(DEPDIR)/libHACD_a-hacdManifoldMesh.Tpo -c -o libHACD_a-hacdManifoldMesh.o `test -f 'HACD/hacdManifoldMesh.cpp' || echo '$(srcdir)/'`HACD/hacdManifoldMesh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libHACD_a-hacdManifoldMesh.Tpo $(DEPDIR)/libHACD_a-hacdManifoldMesh.Po
#	$(AM_V_CXX)source='HACD/hacdManifoldMesh.cpp' object='libHACD_a-hacdManifoldMesh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -c -o libHACD_a-hacdManifoldMesh.o `test -f 'HACD/hacdManifoldMesh.cpp' || echo '$(srcdir)/'`HACD/hacdManifoldMesh.cpp

libHACD_a-hacdManifoldMesh.obj: HACD/hacdManifoldMesh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -MT libHACD_a-hacdManifoldMesh.obj -MD -MP -MF $(DEPDIR)/libHACD_a-hacdManifoldMesh.Tpo -c -o libHACD_a-hacdManifoldMesh.obj `if test -f 'HACD/hacdManifoldMesh.cpp'; then $(CYGPATH_W) 'HACD/hacdManifoldMesh.cpp'; else $(CYGPATH_W) '$(srcdir)/HACD/hacdManifoldMesh.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libHACD_a-hacdManifoldMesh.Tpo $(DEPDIR)/libHACD_a-hacdManifoldMesh.Po
#	$(AM_V_CXX)source='HACD/hacdManifoldMesh.cpp' object='libHACD_a-hacdManifoldMesh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libHACD_a_CXXFLAGS) $(CXXFLAGS) -c -o libHACD_a-hacdManifoldMesh.obj `if test -f 'HACD/hacdManifoldMesh.cpp'; then $(CYGPATH_W) 'HACD/hacdManifoldMesh.cpp'; else $(CYGPATH_W) '$(srcdir)/HACD/hacdManifoldMesh.cpp'; fi`

libconvexdecomposition_a-concavity.o: ConvexDecomposition/concavity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-concavity.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-concavity.Tpo -c -o libconvexdecomposition_a-concavity.o `test -f 'ConvexDecomposition/concavity.cpp' || echo '$(srcdir)/'`ConvexDecomposition/concavity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-concavity.Tpo $(DEPDIR)/libconvexdecomposition_a-concavity.Po
#	$(AM_V_CXX)source='ConvexDecomposition/concavity.cpp' object='libconvexdecomposition_a-concavity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-concavity.o `test -f 'ConvexDecomposition/concavity.cpp' || echo '$(srcdir)/'`ConvexDecomposition/concavity.cpp

libconvexdecomposition_a-concavity.obj: ConvexDecomposition/concavity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-concavity.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-concavity.Tpo -c -o libconvexdecomposition_a-concavity.obj `if test -f 'ConvexDecomposition/concavity.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/concavity.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/concavity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-concavity.Tpo $(DEPDIR)/libconvexdecomposition_a-concavity.Po
#	$(AM_V_CXX)source='ConvexDecomposition/concavity.cpp' object='libconvexdecomposition_a-concavity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-concavity.obj `if test -f 'ConvexDecomposition/concavity.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/concavity.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/concavity.cpp'; fi`

libconvexdecomposition_a-ConvexDecomposition.o: ConvexDecomposition/ConvexDecomposition.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-ConvexDecomposition.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-ConvexDecomposition.Tpo -c -o libconvexdecomposition_a-ConvexDecomposition.o `test -f 'ConvexDecomposition/ConvexDecomposition.cpp' || echo '$(srcdir)/'`ConvexDecomposition/ConvexDecomposition.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-ConvexDecomposition.Tpo $(DEPDIR)/libconvexdecomposition_a-ConvexDecomposition.Po
#	$(AM_V_CXX)source='ConvexDecomposition/ConvexDecomposition.cpp' object='libconvexdecomposition_a-ConvexDecomposition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-ConvexDecomposition.o `test -f 'ConvexDecomposition/ConvexDecomposition.cpp' || echo '$(srcdir)/'`ConvexDecomposition/ConvexDecomposition.cpp

libconvexdecomposition_a-ConvexDecomposition.obj: ConvexDecomposition/ConvexDecomposition.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-ConvexDecomposition.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-ConvexDecomposition.Tpo -c -o libconvexdecomposition_a-ConvexDecomposition.obj `if test -f 'ConvexDecomposition/ConvexDecomposition.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/ConvexDecomposition.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/ConvexDecomposition.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-ConvexDecomposition.Tpo $(DEPDIR)/libconvexdecomposition_a-ConvexDecomposition.Po
#	$(AM_V_CXX)source='ConvexDecomposition/ConvexDecomposition.cpp' object='libconvexdecomposition_a-ConvexDecomposition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-ConvexDecomposition.obj `if test -f 'ConvexDecomposition/ConvexDecomposition.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/ConvexDecomposition.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/ConvexDecomposition.cpp'; fi`

libconvexdecomposition_a-vlookup.o: ConvexDecomposition/vlookup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-vlookup.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-vlookup.Tpo -c -o libconvexdecomposition_a-vlookup.o `test -f 'ConvexDecomposition/vlookup.cpp' || echo '$(srcdir)/'`ConvexDecomposition/vlookup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-vlookup.Tpo $(DEPDIR)/libconvexdecomposition_a-vlookup.Po
#	$(AM_V_CXX)source='ConvexDecomposition/vlookup.cpp' object='libconvexdecomposition_a-vlookup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-vlookup.o `test -f 'ConvexDecomposition/vlookup.cpp' || echo '$(srcdir)/'`ConvexDecomposition/vlookup.cpp

libconvexdecomposition_a-vlookup.obj: ConvexDecomposition/vlookup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-vlookup.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-vlookup.Tpo -c -o libconvexdecomposition_a-vlookup.obj `if test -f 'ConvexDecomposition/vlookup.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/vlookup.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/vlookup.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-vlookup.Tpo $(DEPDIR)/libconvexdecomposition_a-vlookup.Po
#	$(AM_V_CXX)source='ConvexDecomposition/vlookup.cpp' object='libconvexdecomposition_a-vlookup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-vlookup.obj `if test -f 'ConvexDecomposition/vlookup.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/vlookup.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/vlookup.cpp'; fi`

libconvexdecomposition_a-bestfit.o: ConvexDecomposition/bestfit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-bestfit.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-bestfit.Tpo -c -o libconvexdecomposition_a-bestfit.o `test -f 'ConvexDecomposition/bestfit.cpp' || echo '$(srcdir)/'`ConvexDecomposition/bestfit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-bestfit.Tpo $(DEPDIR)/libconvexdecomposition_a-bestfit.Po
#	$(AM_V_CXX)source='ConvexDecomposition/bestfit.cpp' object='libconvexdecomposition_a-bestfit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-bestfit.o `test -f 'ConvexDecomposition/bestfit.cpp' || echo '$(srcdir)/'`ConvexDecomposition/bestfit.cpp

libconvexdecomposition_a-bestfit.obj: ConvexDecomposition/bestfit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-bestfit.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-bestfit.Tpo -c -o libconvexdecomposition_a-bestfit.obj `if test -f 'ConvexDecomposition/bestfit.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/bestfit.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/bestfit.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-bestfit.Tpo $(DEPDIR)/libconvexdecomposition_a-bestfit.Po
#	$(AM_V_CXX)source='ConvexDecomposition/bestfit.cpp' object='libconvexdecomposition_a-bestfit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-bestfit.obj `if test -f 'ConvexDecomposition/bestfit.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/bestfit.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/bestfit.cpp'; fi`

libconvexdecomposition_a-ConvexBuilder.o: ConvexDecomposition/ConvexBuilder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-ConvexBuilder.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-ConvexBuilder.Tpo -c -o libconvexdecomposition_a-ConvexBuilder.o `test -f 'ConvexDecomposition/ConvexBuilder.cpp' || echo '$(srcdir)/'`ConvexDecomposition/ConvexBuilder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-ConvexBuilder.Tpo $(DEPDIR)/libconvexdecomposition_a-ConvexBuilder.Po
#	$(AM_V_CXX)source='ConvexDecomposition/ConvexBuilder.cpp' object='libconvexdecomposition_a-ConvexBuilder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-ConvexBuilder.o `test -f 'ConvexDecomposition/ConvexBuilder.cpp' || echo '$(srcdir)/'`ConvexDecomposition/ConvexBuilder.cpp

libconvexdecomposition_a-ConvexBuilder.obj: ConvexDecomposition/ConvexBuilder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-ConvexBuilder.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-ConvexBuilder.Tpo -c -o libconvexdecomposition_a-ConvexBuilder.obj `if test -f 'ConvexDecomposition/ConvexBuilder.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/ConvexBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/ConvexBuilder.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-ConvexBuilder.Tpo $(DEPDIR)/libconvexdecomposition_a-ConvexBuilder.Po
#	$(AM_V_CXX)source='ConvexDecomposition/ConvexBuilder.cpp' object='libconvexdecomposition_a-ConvexBuilder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-ConvexBuilder.obj `if test -f 'ConvexDecomposition/ConvexBuilder.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/ConvexBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/ConvexBuilder.cpp'; fi`

libconvexdecomposition_a-cd_hull.o: ConvexDecomposition/cd_hull.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-cd_hull.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-cd_hull.Tpo -c -o libconvexdecomposition_a-cd_hull.o `test -f 'ConvexDecomposition/cd_hull.cpp' || echo '$(srcdir)/'`ConvexDecomposition/cd_hull.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-cd_hull.Tpo $(DEPDIR)/libconvexdecomposition_a-cd_hull.Po
#	$(AM_V_CXX)source='ConvexDecomposition/cd_hull.cpp' object='libconvexdecomposition_a-cd_hull.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-cd_hull.o `test -f 'ConvexDecomposition/cd_hull.cpp' || echo '$(srcdir)/'`ConvexDecomposition/cd_hull.cpp

libconvexdecomposition_a-cd_hull.obj: ConvexDecomposition/cd_hull.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-cd_hull.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-cd_hull.Tpo -c -o libconvexdecomposition_a-cd_hull.obj `if test -f 'ConvexDecomposition/cd_hull.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/cd_hull.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/cd_hull.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-cd_hull.Tpo $(DEPDIR)/libconvexdecomposition_a-cd_hull.Po
#	$(AM_V_CXX)source='ConvexDecomposition/cd_hull.cpp' object='libconvexdecomposition_a-cd_hull.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-cd_hull.obj `if test -f 'ConvexDecomposition/cd_hull.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/cd_hull.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/cd_hull.cpp'; fi`

libconvexdecomposition_a-raytri.o: ConvexDecomposition/raytri.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-raytri.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-raytri.Tpo -c -o libconvexdecomposition_a-raytri.o `test -f 'ConvexDecomposition/raytri.cpp' || echo '$(srcdir)/'`ConvexDecomposition/raytri.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-raytri.Tpo $(DEPDIR)/libconvexdecomposition_a-raytri.Po
#	$(AM_V_CXX)source='ConvexDecomposition/raytri.cpp' object='libconvexdecomposition_a-raytri.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-raytri.o `test -f 'ConvexDecomposition/raytri.cpp' || echo '$(srcdir)/'`ConvexDecomposition/raytri.cpp

libconvexdecomposition_a-raytri.obj: ConvexDecomposition/raytri.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-raytri.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-raytri.Tpo -c -o libconvexdecomposition_a-raytri.obj `if test -f 'ConvexDecomposition/raytri.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/raytri.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/raytri.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-raytri.Tpo $(DEPDIR)/libconvexdecomposition_a-raytri.Po
#	$(AM_V_CXX)source='ConvexDecomposition/raytri.cpp' object='libconvexdecomposition_a-raytri.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-raytri.obj `if test -f 'ConvexDecomposition/raytri.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/raytri.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/raytri.cpp'; fi`

libconvexdecomposition_a-splitplane.o: ConvexDecomposition/splitplane.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-splitplane.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-splitplane.Tpo -c -o libconvexdecomposition_a-splitplane.o `test -f 'ConvexDecomposition/splitplane.cpp' || echo '$(srcdir)/'`ConvexDecomposition/splitplane.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-splitplane.Tpo $(DEPDIR)/libconvexdecomposition_a-splitplane.Po
#	$(AM_V_CXX)source='ConvexDecomposition/splitplane.cpp' object='libconvexdecomposition_a-splitplane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-splitplane.o `test -f 'ConvexDecomposition/splitplane.cpp' || echo '$(srcdir)/'`ConvexDecomposition/splitplane.cpp

libconvexdecomposition_a-splitplane.obj: ConvexDecomposition/splitplane.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-splitplane.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-splitplane.Tpo -c -o libconvexdecomposition_a-splitplane.obj `if test -f 'ConvexDecomposition/splitplane.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/splitplane.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/splitplane.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-splitplane.Tpo $(DEPDIR)/libconvexdecomposition_a-splitplane.Po
#	$(AM_V_CXX)source='ConvexDecomposition/splitplane.cpp' object='libconvexdecomposition_a-splitplane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-splitplane.obj `if test -f 'ConvexDecomposition/splitplane.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/splitplane.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/splitplane.cpp'; fi`

libconvexdecomposition_a-float_math.o: ConvexDecomposition/float_math.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-float_math.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-float_math.Tpo -c -o libconvexdecomposition_a-float_math.o `test -f 'ConvexDecomposition/float_math.cpp' || echo '$(srcdir)/'`ConvexDecomposition/float_math.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-float_math.Tpo $(DEPDIR)/libconvexdecomposition_a-float_math.Po
#	$(AM_V_CXX)source='ConvexDecomposition/float_math.cpp' object='libconvexdecomposition_a-float_math.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-float_math.o `test -f 'ConvexDecomposition/float_math.cpp' || echo '$(srcdir)/'`ConvexDecomposition/float_math.cpp

libconvexdecomposition_a-float_math.obj: ConvexDecomposition/float_math.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-float_math.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-float_math.Tpo -c -o libconvexdecomposition_a-float_math.obj `if test -f 'ConvexDecomposition/float_math.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/float_math.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/float_math.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-float_math.Tpo $(DEPDIR)/libconvexdecomposition_a-float_math.Po
#	$(AM_V_CXX)source='ConvexDecomposition/float_math.cpp' object='libconvexdecomposition_a-float_math.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-float_math.obj `if test -f 'ConvexDecomposition/float_math.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/float_math.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/float_math.cpp'; fi`

libconvexdecomposition_a-planetri.o: ConvexDecomposition/planetri.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-planetri.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-planetri.Tpo -c -o libconvexdecomposition_a-planetri.o `test -f 'ConvexDecomposition/planetri.cpp' || echo '$(srcdir)/'`ConvexDecomposition/planetri.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-planetri.Tpo $(DEPDIR)/libconvexdecomposition_a-planetri.Po
#	$(AM_V_CXX)source='ConvexDecomposition/planetri.cpp' object='libconvexdecomposition_a-planetri.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-planetri.o `test -f 'ConvexDecomposition/planetri.cpp' || echo '$(srcdir)/'`ConvexDecomposition/planetri.cpp

libconvexdecomposition_a-planetri.obj: ConvexDecomposition/planetri.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-planetri.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-planetri.Tpo -c -o libconvexdecomposition_a-planetri.obj `if test -f 'ConvexDecomposition/planetri.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/planetri.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/planetri.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-planetri.Tpo $(DEPDIR)/libconvexdecomposition_a-planetri.Po
#	$(AM_V_CXX)source='ConvexDecomposition/planetri.cpp' object='libconvexdecomposition_a-planetri.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-planetri.obj `if test -f 'ConvexDecomposition/planetri.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/planetri.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/planetri.cpp'; fi`

libconvexdecomposition_a-cd_wavefront.o: ConvexDecomposition/cd_wavefront.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-cd_wavefront.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-cd_wavefront.Tpo -c -o libconvexdecomposition_a-cd_wavefront.o `test -f 'ConvexDecomposition/cd_wavefront.cpp' || echo '$(srcdir)/'`ConvexDecomposition/cd_wavefront.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-cd_wavefront.Tpo $(DEPDIR)/libconvexdecomposition_a-cd_wavefront.Po
#	$(AM_V_CXX)source='ConvexDecomposition/cd_wavefront.cpp' object='libconvexdecomposition_a-cd_wavefront.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-cd_wavefront.o `test -f 'ConvexDecomposition/cd_wavefront.cpp' || echo '$(srcdir)/'`ConvexDecomposition/cd_wavefront.cpp

libconvexdecomposition_a-cd_wavefront.obj: ConvexDecomposition/cd_wavefront.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-cd_wavefront.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-cd_wavefront.Tpo -c -o libconvexdecomposition_a-cd_wavefront.obj `if test -f 'ConvexDecomposition/cd_wavefront.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/cd_wavefront.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/cd_wavefront.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-cd_wavefront.Tpo $(DEPDIR)/libconvexdecomposition_a-cd_wavefront.Po
#	$(AM_V_CXX)source='ConvexDecomposition/cd_wavefront.cpp' object='libconvexdecomposition_a-cd_wavefront.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-cd_wavefront.obj `if test -f 'ConvexDecomposition/cd_wavefront.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/cd_wavefront.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/cd_wavefront.cpp'; fi`

libconvexdecomposition_a-bestfitobb.o: ConvexDecomposition/bestfitobb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-bestfitobb.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-bestfitobb.Tpo -c -o libconvexdecomposition_a-bestfitobb.o `test -f 'ConvexDecomposition/bestfitobb.cpp' || echo '$(srcdir)/'`ConvexDecomposition/bestfitobb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-bestfitobb.Tpo $(DEPDIR)/libconvexdecomposition_a-bestfitobb.Po
#	$(AM_V_CXX)source='ConvexDecomposition/bestfitobb.cpp' object='libconvexdecomposition_a-bestfitobb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-bestfitobb.o `test -f 'ConvexDecomposition/bestfitobb.cpp' || echo '$(srcdir)/'`ConvexDecomposition/bestfitobb.cpp

libconvexdecomposition_a-bestfitobb.obj: ConvexDecomposition/bestfitobb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-bestfitobb.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-bestfitobb.Tpo -c -o libconvexdecomposition_a-bestfitobb.obj `if test -f 'ConvexDecomposition/bestfitobb.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/bestfitobb.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/bestfitobb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-bestfitobb.Tpo $(DEPDIR)/libconvexdecomposition_a-bestfitobb.Po
#	$(AM_V_CXX)source='ConvexDecomposition/bestfitobb.cpp' object='libconvexdecomposition_a-bestfitobb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-bestfitobb.obj `if test -f 'ConvexDecomposition/bestfitobb.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/bestfitobb.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/bestfitobb.cpp'; fi`

libconvexdecomposition_a-meshvolume.o: ConvexDecomposition/meshvolume.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-meshvolume.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-meshvolume.Tpo -c -o libconvexdecomposition_a-meshvolume.o `test -f 'ConvexDecomposition/meshvolume.cpp' || echo '$(srcdir)/'`ConvexDecomposition/meshvolume.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-meshvolume.Tpo $(DEPDIR)/libconvexdecomposition_a-meshvolume.Po
#	$(AM_V_CXX)source='ConvexDecomposition/meshvolume.cpp' object='libconvexdecomposition_a-meshvolume.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-meshvolume.o `test -f 'ConvexDecomposition/meshvolume.cpp' || echo '$(srcdir)/'`ConvexDecomposition/meshvolume.cpp

libconvexdecomposition_a-meshvolume.obj: ConvexDecomposition/meshvolume.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-meshvolume.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-meshvolume.Tpo -c -o libconvexdecomposition_a-meshvolume.obj `if test -f 'ConvexDecomposition/meshvolume.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/meshvolume.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/meshvolume.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-meshvolume.Tpo $(DEPDIR)/libconvexdecomposition_a-meshvolume.Po
#	$(AM_V_CXX)source='ConvexDecomposition/meshvolume.cpp' object='libconvexdecomposition_a-meshvolume.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-meshvolume.obj `if test -f 'ConvexDecomposition/meshvolume.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/meshvolume.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/meshvolume.cpp'; fi`

libconvexdecomposition_a-fitsphere.o: ConvexDecomposition/fitsphere.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-fitsphere.o -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-fitsphere.Tpo -c -o libconvexdecomposition_a-fitsphere.o `test -f 'ConvexDecomposition/fitsphere.cpp' || echo '$(srcdir)/'`ConvexDecomposition/fitsphere.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-fitsphere.Tpo $(DEPDIR)/libconvexdecomposition_a-fitsphere.Po
#	$(AM_V_CXX)source='ConvexDecomposition/fitsphere.cpp' object='libconvexdecomposition_a-fitsphere.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-fitsphere.o `test -f 'ConvexDecomposition/fitsphere.cpp' || echo '$(srcdir)/'`ConvexDecomposition/fitsphere.cpp

libconvexdecomposition_a-fitsphere.obj: ConvexDecomposition/fitsphere.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -MT libconvexdecomposition_a-fitsphere.obj -MD -MP -MF $(DEPDIR)/libconvexdecomposition_a-fitsphere.Tpo -c -o libconvexdecomposition_a-fitsphere.obj `if test -f 'ConvexDecomposition/fitsphere.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/fitsphere.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/fitsphere.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconvexdecomposition_a-fitsphere.Tpo $(DEPDIR)/libconvexdecomposition_a-fitsphere.Po
#	$(AM_V_CXX)source='ConvexDecomposition/fitsphere.cpp' object='libconvexdecomposition_a-fitsphere.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconvexdecomposition_a_CXXFLAGS) $(CXXFLAGS) -c -o libconvexdecomposition_a-fitsphere.obj `if test -f 'ConvexDecomposition/fitsphere.cpp'; then $(CYGPATH_W) 'ConvexDecomposition/fitsphere.cpp'; else $(CYGPATH_W) '$(srcdir)/ConvexDecomposition/fitsphere.cpp'; fi`

libgimpactutils_a-btGImpactConvexDecompositionShape.o: GIMPACTUtils/btGImpactConvexDecompositionShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgimpactutils_a_CXXFLAGS) $(CXXFLAGS) -MT libgimpactutils_a-btGImpactConvexDecompositionShape.o -MD -MP -MF $(DEPDIR)/libgimpactutils_a-btGImpactConvexDecompositionShape.Tpo -c -o libgimpactutils_a-btGImpactConvexDecompositionShape.o `test -f 'GIMPACTUtils/btGImpactConvexDecompositionShape.cpp' || echo '$(srcdir)/'`GIMPACTUtils/btGImpactConvexDecompositionShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgimpactutils_a-btGImpactConvexDecompositionShape.Tpo $(DEPDIR)/libgimpactutils_a-btGImpactConvexDecompositionShape.Po
#	$(AM_V_CXX)source='GIMPACTUtils/btGImpactConvexDecompositionShape.cpp' object='libgimpactutils_a-btGImpactConvexDecompositionShape.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgimpactutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libgimpactutils_a-btGImpactConvexDecompositionShape.o `test -f 'GIMPACTUtils/btGImpactConvexDecompositionShape.cpp' || echo '$(srcdir)/'`GIMPACTUtils/btGImpactConvexDecompositionShape.cpp

libgimpactutils_a-btGImpactConvexDecompositionShape.obj: GIMPACTUtils/btGImpactConvexDecompositionShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgimpactutils_a_CXXFLAGS) $(CXXFLAGS) -MT libgimpactutils_a-btGImpactConvexDecompositionShape.obj -MD -MP -MF $(DEPDIR)/libgimpactutils_a-btGImpactConvexDecompositionShape.Tpo -c -o libgimpactutils_a-btGImpactConvexDecompositionShape.obj `if test -f 'GIMPACTUtils/btGImpactConvexDecompositionShape.cpp'; then $(CYGPATH_W) 'GIMPACTUtils/btGImpactConvexDecompositionShape.cpp'; else $(CYGPATH_W) '$(srcdir)/GIMPACTUtils/btGImpactConvexDecompositionShape.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgimpactutils_a-btGImpactConvexDecompositionShape.Tpo $(DEPDIR)/libgimpactutils_a-btGImpactConvexDecompositionShape.Po
#	$(AM_V_CXX)source='GIMPACTUtils/btGImpactConvexDecompositionShape.cpp' object='libgimpactutils_a-btGImpactConvexDecompositionShape.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgimpactutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libgimpactutils_a-btGImpactConvexDecompositionShape.obj `if test -f 'GIMPACTUtils/btGImpactConvexDecompositionShape.cpp'; then $(CYGPATH_W) 'GIMPACTUtils/btGImpactConvexDecompositionShape.cpp'; else $(CYGPATH_W) '$(srcdir)/GIMPACTUtils/btGImpactConvexDecompositionShape.cpp'; fi`

libglui_a-glui_spinner.o: glui/glui_spinner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_spinner.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_spinner.Tpo -c -o libglui_a-glui_spinner.o `test -f 'glui/glui_spinner.cpp' || echo '$(srcdir)/'`glui/glui_spinner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_spinner.Tpo $(DEPDIR)/libglui_a-glui_spinner.Po
#	$(AM_V_CXX)source='glui/glui_spinner.cpp' object='libglui_a-glui_spinner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_spinner.o `test -f 'glui/glui_spinner.cpp' || echo '$(srcdir)/'`glui/glui_spinner.cpp

libglui_a-glui_spinner.obj: glui/glui_spinner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_spinner.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_spinner.Tpo -c -o libglui_a-glui_spinner.obj `if test -f 'glui/glui_spinner.cpp'; then $(CYGPATH_W) 'glui/glui_spinner.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_spinner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_spinner.Tpo $(DEPDIR)/libglui_a-glui_spinner.Po
#	$(AM_V_CXX)source='glui/glui_spinner.cpp' object='libglui_a-glui_spinner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_spinner.obj `if test -f 'glui/glui_spinner.cpp'; then $(CYGPATH_W) 'glui/glui_spinner.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_spinner.cpp'; fi`

libglui_a-glui_treepanel.o: glui/glui_treepanel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_treepanel.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_treepanel.Tpo -c -o libglui_a-glui_treepanel.o `test -f 'glui/glui_treepanel.cpp' || echo '$(srcdir)/'`glui/glui_treepanel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_treepanel.Tpo $(DEPDIR)/libglui_a-glui_treepanel.Po
#	$(AM_V_CXX)source='glui/glui_treepanel.cpp' object='libglui_a-glui_treepanel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_treepanel.o `test -f 'glui/glui_treepanel.cpp' || echo '$(srcdir)/'`glui/glui_treepanel.cpp

libglui_a-glui_treepanel.obj: glui/glui_treepanel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_treepanel.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_treepanel.Tpo -c -o libglui_a-glui_treepanel.obj `if test -f 'glui/glui_treepanel.cpp'; then $(CYGPATH_W) 'glui/glui_treepanel.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_treepanel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_treepanel.Tpo $(DEPDIR)/libglui_a-glui_treepanel.Po
#	$(AM_V_CXX)source='glui/glui_treepanel.cpp' object='libglui_a-glui_treepanel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_treepanel.obj `if test -f 'glui/glui_treepanel.cpp'; then $(CYGPATH_W) 'glui/glui_treepanel.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_treepanel.cpp'; fi`

libglui_a-arcball.o: glui/arcball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-arcball.o -MD -MP -MF $(DEPDIR)/libglui_a-arcball.Tpo -c -o libglui_a-arcball.o `test -f 'glui/arcball.cpp' || echo '$(srcdir)/'`glui/arcball.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-arcball.Tpo $(DEPDIR)/libglui_a-arcball.Po
#	$(AM_V_CXX)source='glui/arcball.cpp' object='libglui_a-arcball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-arcball.o `test -f 'glui/arcball.cpp' || echo '$(srcdir)/'`glui/arcball.cpp

libglui_a-arcball.obj: glui/arcball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-arcball.obj -MD -MP -MF $(DEPDIR)/libglui_a-arcball.Tpo -c -o libglui_a-arcball.obj `if test -f 'glui/arcball.cpp'; then $(CYGPATH_W) 'glui/arcball.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/arcball.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-arcball.Tpo $(DEPDIR)/libglui_a-arcball.Po
#	$(AM_V_CXX)source='glui/arcball.cpp' object='libglui_a-arcball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-arcball.obj `if test -f 'glui/arcball.cpp'; then $(CYGPATH_W) 'glui/arcball.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/arcball.cpp'; fi`

libglui_a-glui_scrollbar.o: glui/glui_scrollbar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_scrollbar.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_scrollbar.Tpo -c -o libglui_a-glui_scrollbar.o `test -f 'glui/glui_scrollbar.cpp' || echo '$(srcdir)/'`glui/glui_scrollbar.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_scrollbar.Tpo $(DEPDIR)/libglui_a-glui_scrollbar.Po
#	$(AM_V_CXX)source='glui/glui_scrollbar.cpp' object='libglui_a-glui_scrollbar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_scrollbar.o `test -f 'glui/glui_scrollbar.cpp' || echo '$(srcdir)/'`glui/glui_scrollbar.cpp

libglui_a-glui_scrollbar.obj: glui/glui_scrollbar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_scrollbar.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_scrollbar.Tpo -c -o libglui_a-glui_scrollbar.obj `if test -f 'glui/glui_scrollbar.cpp'; then $(CYGPATH_W) 'glui/glui_scrollbar.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_scrollbar.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_scrollbar.Tpo $(DEPDIR)/libglui_a-glui_scrollbar.Po
#	$(AM_V_CXX)source='glui/glui_scrollbar.cpp' object='libglui_a-glui_scrollbar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_scrollbar.obj `if test -f 'glui/glui_scrollbar.cpp'; then $(CYGPATH_W) 'glui/glui_scrollbar.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_scrollbar.cpp'; fi`

libglui_a-glui_filebrowser.o: glui/glui_filebrowser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_filebrowser.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_filebrowser.Tpo -c -o libglui_a-glui_filebrowser.o `test -f 'glui/glui_filebrowser.cpp' || echo '$(srcdir)/'`glui/glui_filebrowser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_filebrowser.Tpo $(DEPDIR)/libglui_a-glui_filebrowser.Po
#	$(AM_V_CXX)source='glui/glui_filebrowser.cpp' object='libglui_a-glui_filebrowser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_filebrowser.o `test -f 'glui/glui_filebrowser.cpp' || echo '$(srcdir)/'`glui/glui_filebrowser.cpp

libglui_a-glui_filebrowser.obj: glui/glui_filebrowser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_filebrowser.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_filebrowser.Tpo -c -o libglui_a-glui_filebrowser.obj `if test -f 'glui/glui_filebrowser.cpp'; then $(CYGPATH_W) 'glui/glui_filebrowser.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_filebrowser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_filebrowser.Tpo $(DEPDIR)/libglui_a-glui_filebrowser.Po
#	$(AM_V_CXX)source='glui/glui_filebrowser.cpp' object='libglui_a-glui_filebrowser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_filebrowser.obj `if test -f 'glui/glui_filebrowser.cpp'; then $(CYGPATH_W) 'glui/glui_filebrowser.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_filebrowser.cpp'; fi`

libglui_a-glui_node.o: glui/glui_node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_node.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_node.Tpo -c -o libglui_a-glui_node.o `test -f 'glui/glui_node.cpp' || echo '$(srcdir)/'`glui/glui_node.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_node.Tpo $(DEPDIR)/libglui_a-glui_node.Po
#	$(AM_V_CXX)source='glui/glui_node.cpp' object='libglui_a-glui_node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_node.o `test -f 'glui/glui_node.cpp' || echo '$(srcdir)/'`glui/glui_node.cpp

libglui_a-glui_node.obj: glui/glui_node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_node.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_node.Tpo -c -o libglui_a-glui_node.obj `if test -f 'glui/glui_node.cpp'; then $(CYGPATH_W) 'glui/glui_node.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_node.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_node.Tpo $(DEPDIR)/libglui_a-glui_node.Po
#	$(AM_V_CXX)source='glui/glui_node.cpp' object='libglui_a-glui_node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_node.obj `if test -f 'glui/glui_node.cpp'; then $(CYGPATH_W) 'glui/glui_node.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_node.cpp'; fi`

libglui_a-glui_edittext.o: glui/glui_edittext.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_edittext.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_edittext.Tpo -c -o libglui_a-glui_edittext.o `test -f 'glui/glui_edittext.cpp' || echo '$(srcdir)/'`glui/glui_edittext.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_edittext.Tpo $(DEPDIR)/libglui_a-glui_edittext.Po
#	$(AM_V_CXX)source='glui/glui_edittext.cpp' object='libglui_a-glui_edittext.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_edittext.o `test -f 'glui/glui_edittext.cpp' || echo '$(srcdir)/'`glui/glui_edittext.cpp

libglui_a-glui_edittext.obj: glui/glui_edittext.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_edittext.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_edittext.Tpo -c -o libglui_a-glui_edittext.obj `if test -f 'glui/glui_edittext.cpp'; then $(CYGPATH_W) 'glui/glui_edittext.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_edittext.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_edittext.Tpo $(DEPDIR)/libglui_a-glui_edittext.Po
#	$(AM_V_CXX)source='glui/glui_edittext.cpp' object='libglui_a-glui_edittext.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_edittext.obj `if test -f 'glui/glui_edittext.cpp'; then $(CYGPATH_W) 'glui/glui_edittext.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_edittext.cpp'; fi`

libglui_a-glui_statictext.o: glui/glui_statictext.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_statictext.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_statictext.Tpo -c -o libglui_a-glui_statictext.o `test -f 'glui/glui_statictext.cpp' || echo '$(srcdir)/'`glui/glui_statictext.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_statictext.Tpo $(DEPDIR)/libglui_a-glui_statictext.Po
#	$(AM_V_CXX)source='glui/glui_statictext.cpp' object='libglui_a-glui_statictext.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_statictext.o `test -f 'glui/glui_statictext.cpp' || echo '$(srcdir)/'`glui/glui_statictext.cpp

libglui_a-glui_statictext.obj: glui/glui_statictext.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_statictext.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_statictext.Tpo -c -o libglui_a-glui_statictext.obj `if test -f 'glui/glui_statictext.cpp'; then $(CYGPATH_W) 'glui/glui_statictext.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_statictext.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_statictext.Tpo $(DEPDIR)/libglui_a-glui_statictext.Po
#	$(AM_V_CXX)source='glui/glui_statictext.cpp' object='libglui_a-glui_statictext.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_statictext.obj `if test -f 'glui/glui_statictext.cpp'; then $(CYGPATH_W) 'glui/glui_statictext.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_statictext.cpp'; fi`

libglui_a-glui_bitmaps.o: glui/glui_bitmaps.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_bitmaps.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_bitmaps.Tpo -c -o libglui_a-glui_bitmaps.o `test -f 'glui/glui_bitmaps.cpp' || echo '$(srcdir)/'`glui/glui_bitmaps.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_bitmaps.Tpo $(DEPDIR)/libglui_a-glui_bitmaps.Po
#	$(AM_V_CXX)source='glui/glui_bitmaps.cpp' object='libglui_a-glui_bitmaps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_bitmaps.o `test -f 'glui/glui_bitmaps.cpp' || echo '$(srcdir)/'`glui/glui_bitmaps.cpp

libglui_a-glui_bitmaps.obj: glui/glui_bitmaps.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_bitmaps.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_bitmaps.Tpo -c -o libglui_a-glui_bitmaps.obj `if test -f 'glui/glui_bitmaps.cpp'; then $(CYGPATH_W) 'glui/glui_bitmaps.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_bitmaps.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_bitmaps.Tpo $(DEPDIR)/libglui_a-glui_bitmaps.Po
#	$(AM_V_CXX)source='glui/glui_bitmaps.cpp' object='libglui_a-glui_bitmaps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_bitmaps.obj `if test -f 'glui/glui_bitmaps.cpp'; then $(CYGPATH_W) 'glui/glui_bitmaps.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_bitmaps.cpp'; fi`

libglui_a-algebra3.o: glui/algebra3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-algebra3.o -MD -MP -MF $(DEPDIR)/libglui_a-algebra3.Tpo -c -o libglui_a-algebra3.o `test -f 'glui/algebra3.cpp' || echo '$(srcdir)/'`glui/algebra3.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-algebra3.Tpo $(DEPDIR)/libglui_a-algebra3.Po
#	$(AM_V_CXX)source='glui/algebra3.cpp' object='libglui_a-algebra3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-algebra3.o `test -f 'glui/algebra3.cpp' || echo '$(srcdir)/'`glui/algebra3.cpp

libglui_a-algebra3.obj: glui/algebra3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-algebra3.obj -MD -MP -MF $(DEPDIR)/libglui_a-algebra3.Tpo -c -o libglui_a-algebra3.obj `if test -f 'glui/algebra3.cpp'; then $(CYGPATH_W) 'glui/algebra3.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/algebra3.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-algebra3.Tpo $(DEPDIR)/libglui_a-algebra3.Po
#	$(AM_V_CXX)source='glui/algebra3.cpp' object='libglui_a-algebra3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-algebra3.obj `if test -f 'glui/algebra3.cpp'; then $(CYGPATH_W) 'glui/algebra3.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/algebra3.cpp'; fi`

libglui_a-glui_string.o: glui/glui_string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_string.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_string.Tpo -c -o libglui_a-glui_string.o `test -f 'glui/glui_string.cpp' || echo '$(srcdir)/'`glui/glui_string.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_string.Tpo $(DEPDIR)/libglui_a-glui_string.Po
#	$(AM_V_CXX)source='glui/glui_string.cpp' object='libglui_a-glui_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_string.o `test -f 'glui/glui_string.cpp' || echo '$(srcdir)/'`glui/glui_string.cpp

libglui_a-glui_string.obj: glui/glui_string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_string.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_string.Tpo -c -o libglui_a-glui_string.obj `if test -f 'glui/glui_string.cpp'; then $(CYGPATH_W) 'glui/glui_string.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_string.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_string.Tpo $(DEPDIR)/libglui_a-glui_string.Po
#	$(AM_V_CXX)source='glui/glui_string.cpp' object='libglui_a-glui_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_string.obj `if test -f 'glui/glui_string.cpp'; then $(CYGPATH_W) 'glui/glui_string.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_string.cpp'; fi`

libglui_a-glui_button.o: glui/glui_button.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_button.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_button.Tpo -c -o libglui_a-glui_button.o `test -f 'glui/glui_button.cpp' || echo '$(srcdir)/'`glui/glui_button.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_button.Tpo $(DEPDIR)/libglui_a-glui_button.Po
#	$(AM_V_CXX)source='glui/glui_button.cpp' object='libglui_a-glui_button.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_button.o `test -f 'glui/glui_button.cpp' || echo '$(srcdir)/'`glui/glui_button.cpp

libglui_a-glui_button.obj: glui/glui_button.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_button.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_button.Tpo -c -o libglui_a-glui_button.obj `if test -f 'glui/glui_button.cpp'; then $(CYGPATH_W) 'glui/glui_button.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_button.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_button.Tpo $(DEPDIR)/libglui_a-glui_button.Po
#	$(AM_V_CXX)source='glui/glui_button.cpp' object='libglui_a-glui_button.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_button.obj `if test -f 'glui/glui_button.cpp'; then $(CYGPATH_W) 'glui/glui_button.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_button.cpp'; fi`

libglui_a-glui_add_controls.o: glui/glui_add_controls.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_add_controls.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_add_controls.Tpo -c -o libglui_a-glui_add_controls.o `test -f 'glui/glui_add_controls.cpp' || echo '$(srcdir)/'`glui/glui_add_controls.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_add_controls.Tpo $(DEPDIR)/libglui_a-glui_add_controls.Po
#	$(AM_V_CXX)source='glui/glui_add_controls.cpp' object='libglui_a-glui_add_controls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_add_controls.o `test -f 'glui/glui_add_controls.cpp' || echo '$(srcdir)/'`glui/glui_add_controls.cpp

libglui_a-glui_add_controls.obj: glui/glui_add_controls.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_add_controls.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_add_controls.Tpo -c -o libglui_a-glui_add_controls.obj `if test -f 'glui/glui_add_controls.cpp'; then $(CYGPATH_W) 'glui/glui_add_controls.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_add_controls.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_add_controls.Tpo $(DEPDIR)/libglui_a-glui_add_controls.Po
#	$(AM_V_CXX)source='glui/glui_add_controls.cpp' object='libglui_a-glui_add_controls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_add_controls.obj `if test -f 'glui/glui_add_controls.cpp'; then $(CYGPATH_W) 'glui/glui_add_controls.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_add_controls.cpp'; fi`

libglui_a-glui_control.o: glui/glui_control.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_control.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_control.Tpo -c -o libglui_a-glui_control.o `test -f 'glui/glui_control.cpp' || echo '$(srcdir)/'`glui/glui_control.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_control.Tpo $(DEPDIR)/libglui_a-glui_control.Po
#	$(AM_V_CXX)source='glui/glui_control.cpp' object='libglui_a-glui_control.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_control.o `test -f 'glui/glui_control.cpp' || echo '$(srcdir)/'`glui/glui_control.cpp

libglui_a-glui_control.obj: glui/glui_control.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_control.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_control.Tpo -c -o libglui_a-glui_control.obj `if test -f 'glui/glui_control.cpp'; then $(CYGPATH_W) 'glui/glui_control.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_control.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_control.Tpo $(DEPDIR)/libglui_a-glui_control.Po
#	$(AM_V_CXX)source='glui/glui_control.cpp' object='libglui_a-glui_control.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_control.obj `if test -f 'glui/glui_control.cpp'; then $(CYGPATH_W) 'glui/glui_control.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_control.cpp'; fi`

libglui_a-glui.o: glui/glui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui.o -MD -MP -MF $(DEPDIR)/libglui_a-glui.Tpo -c -o libglui_a-glui.o `test -f 'glui/glui.cpp' || echo '$(srcdir)/'`glui/glui.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui.Tpo $(DEPDIR)/libglui_a-glui.Po
#	$(AM_V_CXX)source='glui/glui.cpp' object='libglui_a-glui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui.o `test -f 'glui/glui.cpp' || echo '$(srcdir)/'`glui/glui.cpp

libglui_a-glui.obj: glui/glui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui.Tpo -c -o libglui_a-glui.obj `if test -f 'glui/glui.cpp'; then $(CYGPATH_W) 'glui/glui.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui.Tpo $(DEPDIR)/libglui_a-glui.Po
#	$(AM_V_CXX)source='glui/glui.cpp' object='libglui_a-glui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui.obj `if test -f 'glui/glui.cpp'; then $(CYGPATH_W) 'glui/glui.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui.cpp'; fi`

libglui_a-glui_listbox.o: glui/glui_listbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_listbox.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_listbox.Tpo -c -o libglui_a-glui_listbox.o `test -f 'glui/glui_listbox.cpp' || echo '$(srcdir)/'`glui/glui_listbox.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_listbox.Tpo $(DEPDIR)/libglui_a-glui_listbox.Po
#	$(AM_V_CXX)source='glui/glui_listbox.cpp' object='libglui_a-glui_listbox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_listbox.o `test -f 'glui/glui_listbox.cpp' || echo '$(srcdir)/'`glui/glui_listbox.cpp

libglui_a-glui_listbox.obj: glui/glui_listbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_listbox.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_listbox.Tpo -c -o libglui_a-glui_listbox.obj `if test -f 'glui/glui_listbox.cpp'; then $(CYGPATH_W) 'glui/glui_listbox.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_listbox.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_listbox.Tpo $(DEPDIR)/libglui_a-glui_listbox.Po
#	$(AM_V_CXX)source='glui/glui_listbox.cpp' object='libglui_a-glui_listbox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_listbox.obj `if test -f 'glui/glui_listbox.cpp'; then $(CYGPATH_W) 'glui/glui_listbox.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_listbox.cpp'; fi`

libglui_a-glui_checkbox.o: glui/glui_checkbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_checkbox.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_checkbox.Tpo -c -o libglui_a-glui_checkbox.o `test -f 'glui/glui_checkbox.cpp' || echo '$(srcdir)/'`glui/glui_checkbox.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_checkbox.Tpo $(DEPDIR)/libglui_a-glui_checkbox.Po
#	$(AM_V_CXX)source='glui/glui_checkbox.cpp' object='libglui_a-glui_checkbox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_checkbox.o `test -f 'glui/glui_checkbox.cpp' || echo '$(srcdir)/'`glui/glui_checkbox.cpp

libglui_a-glui_checkbox.obj: glui/glui_checkbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_checkbox.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_checkbox.Tpo -c -o libglui_a-glui_checkbox.obj `if test -f 'glui/glui_checkbox.cpp'; then $(CYGPATH_W) 'glui/glui_checkbox.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_checkbox.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_checkbox.Tpo $(DEPDIR)/libglui_a-glui_checkbox.Po
#	$(AM_V_CXX)source='glui/glui_checkbox.cpp' object='libglui_a-glui_checkbox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_checkbox.obj `if test -f 'glui/glui_checkbox.cpp'; then $(CYGPATH_W) 'glui/glui_checkbox.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_checkbox.cpp'; fi`

libglui_a-glui_commandline.o: glui/glui_commandline.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_commandline.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_commandline.Tpo -c -o libglui_a-glui_commandline.o `test -f 'glui/glui_commandline.cpp' || echo '$(srcdir)/'`glui/glui_commandline.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_commandline.Tpo $(DEPDIR)/libglui_a-glui_commandline.Po
#	$(AM_V_CXX)source='glui/glui_commandline.cpp' object='libglui_a-glui_commandline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_commandline.o `test -f 'glui/glui_commandline.cpp' || echo '$(srcdir)/'`glui/glui_commandline.cpp

libglui_a-glui_commandline.obj: glui/glui_commandline.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_commandline.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_commandline.Tpo -c -o libglui_a-glui_commandline.obj `if test -f 'glui/glui_commandline.cpp'; then $(CYGPATH_W) 'glui/glui_commandline.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_commandline.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_commandline.Tpo $(DEPDIR)/libglui_a-glui_commandline.Po
#	$(AM_V_CXX)source='glui/glui_commandline.cpp' object='libglui_a-glui_commandline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_commandline.obj `if test -f 'glui/glui_commandline.cpp'; then $(CYGPATH_W) 'glui/glui_commandline.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_commandline.cpp'; fi`

libglui_a-glui_textbox.o: glui/glui_textbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_textbox.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_textbox.Tpo -c -o libglui_a-glui_textbox.o `test -f 'glui/glui_textbox.cpp' || echo '$(srcdir)/'`glui/glui_textbox.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_textbox.Tpo $(DEPDIR)/libglui_a-glui_textbox.Po
#	$(AM_V_CXX)source='glui/glui_textbox.cpp' object='libglui_a-glui_textbox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_textbox.o `test -f 'glui/glui_textbox.cpp' || echo '$(srcdir)/'`glui/glui_textbox.cpp

libglui_a-glui_textbox.obj: glui/glui_textbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_textbox.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_textbox.Tpo -c -o libglui_a-glui_textbox.obj `if test -f 'glui/glui_textbox.cpp'; then $(CYGPATH_W) 'glui/glui_textbox.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_textbox.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_textbox.Tpo $(DEPDIR)/libglui_a-glui_textbox.Po
#	$(AM_V_CXX)source='glui/glui_textbox.cpp' object='libglui_a-glui_textbox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_textbox.obj `if test -f 'glui/glui_textbox.cpp'; then $(CYGPATH_W) 'glui/glui_textbox.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_textbox.cpp'; fi`

libglui_a-glui_column.o: glui/glui_column.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_column.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_column.Tpo -c -o libglui_a-glui_column.o `test -f 'glui/glui_column.cpp' || echo '$(srcdir)/'`glui/glui_column.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_column.Tpo $(DEPDIR)/libglui_a-glui_column.Po
#	$(AM_V_CXX)source='glui/glui_column.cpp' object='libglui_a-glui_column.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_column.o `test -f 'glui/glui_column.cpp' || echo '$(srcdir)/'`glui/glui_column.cpp

libglui_a-glui_column.obj: glui/glui_column.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_column.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_column.Tpo -c -o libglui_a-glui_column.obj `if test -f 'glui/glui_column.cpp'; then $(CYGPATH_W) 'glui/glui_column.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_column.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_column.Tpo $(DEPDIR)/libglui_a-glui_column.Po
#	$(AM_V_CXX)source='glui/glui_column.cpp' object='libglui_a-glui_column.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_column.obj `if test -f 'glui/glui_column.cpp'; then $(CYGPATH_W) 'glui/glui_column.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_column.cpp'; fi`

libglui_a-glui_mouse_iaction.o: glui/glui_mouse_iaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_mouse_iaction.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_mouse_iaction.Tpo -c -o libglui_a-glui_mouse_iaction.o `test -f 'glui/glui_mouse_iaction.cpp' || echo '$(srcdir)/'`glui/glui_mouse_iaction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_mouse_iaction.Tpo $(DEPDIR)/libglui_a-glui_mouse_iaction.Po
#	$(AM_V_CXX)source='glui/glui_mouse_iaction.cpp' object='libglui_a-glui_mouse_iaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_mouse_iaction.o `test -f 'glui/glui_mouse_iaction.cpp' || echo '$(srcdir)/'`glui/glui_mouse_iaction.cpp

libglui_a-glui_mouse_iaction.obj: glui/glui_mouse_iaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_mouse_iaction.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_mouse_iaction.Tpo -c -o libglui_a-glui_mouse_iaction.obj `if test -f 'glui/glui_mouse_iaction.cpp'; then $(CYGPATH_W) 'glui/glui_mouse_iaction.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_mouse_iaction.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_mouse_iaction.Tpo $(DEPDIR)/libglui_a-glui_mouse_iaction.Po
#	$(AM_V_CXX)source='glui/glui_mouse_iaction.cpp' object='libglui_a-glui_mouse_iaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_mouse_iaction.obj `if test -f 'glui/glui_mouse_iaction.cpp'; then $(CYGPATH_W) 'glui/glui_mouse_iaction.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_mouse_iaction.cpp'; fi`

libglui_a-glui_radio.o: glui/glui_radio.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_radio.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_radio.Tpo -c -o libglui_a-glui_radio.o `test -f 'glui/glui_radio.cpp' || echo '$(srcdir)/'`glui/glui_radio.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_radio.Tpo $(DEPDIR)/libglui_a-glui_radio.Po
#	$(AM_V_CXX)source='glui/glui_radio.cpp' object='libglui_a-glui_radio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_radio.o `test -f 'glui/glui_radio.cpp' || echo '$(srcdir)/'`glui/glui_radio.cpp

libglui_a-glui_radio.obj: glui/glui_radio.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_radio.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_radio.Tpo -c -o libglui_a-glui_radio.obj `if test -f 'glui/glui_radio.cpp'; then $(CYGPATH_W) 'glui/glui_radio.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_radio.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_radio.Tpo $(DEPDIR)/libglui_a-glui_radio.Po
#	$(AM_V_CXX)source='glui/glui_radio.cpp' object='libglui_a-glui_radio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_radio.obj `if test -f 'glui/glui_radio.cpp'; then $(CYGPATH_W) 'glui/glui_radio.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_radio.cpp'; fi`

libglui_a-glui_translation.o: glui/glui_translation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_translation.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_translation.Tpo -c -o libglui_a-glui_translation.o `test -f 'glui/glui_translation.cpp' || echo '$(srcdir)/'`glui/glui_translation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_translation.Tpo $(DEPDIR)/libglui_a-glui_translation.Po
#	$(AM_V_CXX)source='glui/glui_translation.cpp' object='libglui_a-glui_translation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_translation.o `test -f 'glui/glui_translation.cpp' || echo '$(srcdir)/'`glui/glui_translation.cpp

libglui_a-glui_translation.obj: glui/glui_translation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_translation.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_translation.Tpo -c -o libglui_a-glui_translation.obj `if test -f 'glui/glui_translation.cpp'; then $(CYGPATH_W) 'glui/glui_translation.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_translation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_translation.Tpo $(DEPDIR)/libglui_a-glui_translation.Po
#	$(AM_V_CXX)source='glui/glui_translation.cpp' object='libglui_a-glui_translation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_translation.obj `if test -f 'glui/glui_translation.cpp'; then $(CYGPATH_W) 'glui/glui_translation.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_translation.cpp'; fi`

libglui_a-glui_tree.o: glui/glui_tree.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_tree.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_tree.Tpo -c -o libglui_a-glui_tree.o `test -f 'glui/glui_tree.cpp' || echo '$(srcdir)/'`glui/glui_tree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_tree.Tpo $(DEPDIR)/libglui_a-glui_tree.Po
#	$(AM_V_CXX)source='glui/glui_tree.cpp' object='libglui_a-glui_tree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_tree.o `test -f 'glui/glui_tree.cpp' || echo '$(srcdir)/'`glui/glui_tree.cpp

libglui_a-glui_tree.obj: glui/glui_tree.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_tree.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_tree.Tpo -c -o libglui_a-glui_tree.obj `if test -f 'glui/glui_tree.cpp'; then $(CYGPATH_W) 'glui/glui_tree.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_tree.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_tree.Tpo $(DEPDIR)/libglui_a-glui_tree.Po
#	$(AM_V_CXX)source='glui/glui_tree.cpp' object='libglui_a-glui_tree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_tree.obj `if test -f 'glui/glui_tree.cpp'; then $(CYGPATH_W) 'glui/glui_tree.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_tree.cpp'; fi`

libglui_a-glui_rotation.o: glui/glui_rotation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_rotation.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_rotation.Tpo -c -o libglui_a-glui_rotation.o `test -f 'glui/glui_rotation.cpp' || echo '$(srcdir)/'`glui/glui_rotation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_rotation.Tpo $(DEPDIR)/libglui_a-glui_rotation.Po
#	$(AM_V_CXX)source='glui/glui_rotation.cpp' object='libglui_a-glui_rotation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_rotation.o `test -f 'glui/glui_rotation.cpp' || echo '$(srcdir)/'`glui/glui_rotation.cpp

libglui_a-glui_rotation.obj: glui/glui_rotation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_rotation.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_rotation.Tpo -c -o libglui_a-glui_rotation.obj `if test -f 'glui/glui_rotation.cpp'; then $(CYGPATH_W) 'glui/glui_rotation.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_rotation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_rotation.Tpo $(DEPDIR)/libglui_a-glui_rotation.Po
#	$(AM_V_CXX)source='glui/glui_rotation.cpp' object='libglui_a-glui_rotation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_rotation.obj `if test -f 'glui/glui_rotation.cpp'; then $(CYGPATH_W) 'glui/glui_rotation.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_rotation.cpp'; fi`

libglui_a-glui_panel.o: glui/glui_panel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_panel.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_panel.Tpo -c -o libglui_a-glui_panel.o `test -f 'glui/glui_panel.cpp' || echo '$(srcdir)/'`glui/glui_panel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_panel.Tpo $(DEPDIR)/libglui_a-glui_panel.Po
#	$(AM_V_CXX)source='glui/glui_panel.cpp' object='libglui_a-glui_panel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_panel.o `test -f 'glui/glui_panel.cpp' || echo '$(srcdir)/'`glui/glui_panel.cpp

libglui_a-glui_panel.obj: glui/glui_panel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_panel.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_panel.Tpo -c -o libglui_a-glui_panel.obj `if test -f 'glui/glui_panel.cpp'; then $(CYGPATH_W) 'glui/glui_panel.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_panel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_panel.Tpo $(DEPDIR)/libglui_a-glui_panel.Po
#	$(AM_V_CXX)source='glui/glui_panel.cpp' object='libglui_a-glui_panel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_panel.obj `if test -f 'glui/glui_panel.cpp'; then $(CYGPATH_W) 'glui/glui_panel.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_panel.cpp'; fi`

libglui_a-glui_rollout.o: glui/glui_rollout.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_rollout.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_rollout.Tpo -c -o libglui_a-glui_rollout.o `test -f 'glui/glui_rollout.cpp' || echo '$(srcdir)/'`glui/glui_rollout.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_rollout.Tpo $(DEPDIR)/libglui_a-glui_rollout.Po
#	$(AM_V_CXX)source='glui/glui_rollout.cpp' object='libglui_a-glui_rollout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_rollout.o `test -f 'glui/glui_rollout.cpp' || echo '$(srcdir)/'`glui/glui_rollout.cpp

libglui_a-glui_rollout.obj: glui/glui_rollout.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_rollout.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_rollout.Tpo -c -o libglui_a-glui_rollout.obj `if test -f 'glui/glui_rollout.cpp'; then $(CYGPATH_W) 'glui/glui_rollout.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_rollout.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_rollout.Tpo $(DEPDIR)/libglui_a-glui_rollout.Po
#	$(AM_V_CXX)source='glui/glui_rollout.cpp' object='libglui_a-glui_rollout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_rollout.obj `if test -f 'glui/glui_rollout.cpp'; then $(CYGPATH_W) 'glui/glui_rollout.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_rollout.cpp'; fi`

libglui_a-glui_separator.o: glui/glui_separator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_separator.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_separator.Tpo -c -o libglui_a-glui_separator.o `test -f 'glui/glui_separator.cpp' || echo '$(srcdir)/'`glui/glui_separator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_separator.Tpo $(DEPDIR)/libglui_a-glui_separator.Po
#	$(AM_V_CXX)source='glui/glui_separator.cpp' object='libglui_a-glui_separator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_separator.o `test -f 'glui/glui_separator.cpp' || echo '$(srcdir)/'`glui/glui_separator.cpp

libglui_a-glui_separator.obj: glui/glui_separator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_separator.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_separator.Tpo -c -o libglui_a-glui_separator.obj `if test -f 'glui/glui_separator.cpp'; then $(CYGPATH_W) 'glui/glui_separator.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_separator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_separator.Tpo $(DEPDIR)/libglui_a-glui_separator.Po
#	$(AM_V_CXX)source='glui/glui_separator.cpp' object='libglui_a-glui_separator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_separator.obj `if test -f 'glui/glui_separator.cpp'; then $(CYGPATH_W) 'glui/glui_separator.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_separator.cpp'; fi`

libglui_a-glui_bitmap_img_data.o: glui/glui_bitmap_img_data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_bitmap_img_data.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_bitmap_img_data.Tpo -c -o libglui_a-glui_bitmap_img_data.o `test -f 'glui/glui_bitmap_img_data.cpp' || echo '$(srcdir)/'`glui/glui_bitmap_img_data.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_bitmap_img_data.Tpo $(DEPDIR)/libglui_a-glui_bitmap_img_data.Po
#	$(AM_V_CXX)source='glui/glui_bitmap_img_data.cpp' object='libglui_a-glui_bitmap_img_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_bitmap_img_data.o `test -f 'glui/glui_bitmap_img_data.cpp' || echo '$(srcdir)/'`glui/glui_bitmap_img_data.cpp

libglui_a-glui_bitmap_img_data.obj: glui/glui_bitmap_img_data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_bitmap_img_data.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_bitmap_img_data.Tpo -c -o libglui_a-glui_bitmap_img_data.obj `if test -f 'glui/glui_bitmap_img_data.cpp'; then $(CYGPATH_W) 'glui/glui_bitmap_img_data.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_bitmap_img_data.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_bitmap_img_data.Tpo $(DEPDIR)/libglui_a-glui_bitmap_img_data.Po
#	$(AM_V_CXX)source='glui/glui_bitmap_img_data.cpp' object='libglui_a-glui_bitmap_img_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_bitmap_img_data.obj `if test -f 'glui/glui_bitmap_img_data.cpp'; then $(CYGPATH_W) 'glui/glui_bitmap_img_data.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_bitmap_img_data.cpp'; fi`

libglui_a-quaternion.o: glui/quaternion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-quaternion.o -MD -MP -MF $(DEPDIR)/libglui_a-quaternion.Tpo -c -o libglui_a-quaternion.o `test -f 'glui/quaternion.cpp' || echo '$(srcdir)/'`glui/quaternion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-quaternion.Tpo $(DEPDIR)/libglui_a-quaternion.Po
#	$(AM_V_CXX)source='glui/quaternion.cpp' object='libglui_a-quaternion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-quaternion.o `test -f 'glui/quaternion.cpp' || echo '$(srcdir)/'`glui/quaternion.cpp

libglui_a-quaternion.obj: glui/quaternion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-quaternion.obj -MD -MP -MF $(DEPDIR)/libglui_a-quaternion.Tpo -c -o libglui_a-quaternion.obj `if test -f 'glui/quaternion.cpp'; then $(CYGPATH_W) 'glui/quaternion.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/quaternion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-quaternion.Tpo $(DEPDIR)/libglui_a-quaternion.Po
#	$(AM_V_CXX)source='glui/quaternion.cpp' object='libglui_a-quaternion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-quaternion.obj `if test -f 'glui/quaternion.cpp'; then $(CYGPATH_W) 'glui/quaternion.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/quaternion.cpp'; fi`

libglui_a-glui_window.o: glui/glui_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_window.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_window.Tpo -c -o libglui_a-glui_window.o `test -f 'glui/glui_window.cpp' || echo '$(srcdir)/'`glui/glui_window.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_window.Tpo $(DEPDIR)/libglui_a-glui_window.Po
#	$(AM_V_CXX)source='glui/glui_window.cpp' object='libglui_a-glui_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_window.o `test -f 'glui/glui_window.cpp' || echo '$(srcdir)/'`glui/glui_window.cpp

libglui_a-glui_window.obj: glui/glui_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_window.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_window.Tpo -c -o libglui_a-glui_window.obj `if test -f 'glui/glui_window.cpp'; then $(CYGPATH_W) 'glui/glui_window.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_window.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_window.Tpo $(DEPDIR)/libglui_a-glui_window.Po
#	$(AM_V_CXX)source='glui/glui_window.cpp' object='libglui_a-glui_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_window.obj `if test -f 'glui/glui_window.cpp'; then $(CYGPATH_W) 'glui/glui_window.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_window.cpp'; fi`

libglui_a-glui_list.o: glui/glui_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_list.o -MD -MP -MF $(DEPDIR)/libglui_a-glui_list.Tpo -c -o libglui_a-glui_list.o `test -f 'glui/glui_list.cpp' || echo '$(srcdir)/'`glui/glui_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_list.Tpo $(DEPDIR)/libglui_a-glui_list.Po
#	$(AM_V_CXX)source='glui/glui_list.cpp' object='libglui_a-glui_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_list.o `test -f 'glui/glui_list.cpp' || echo '$(srcdir)/'`glui/glui_list.cpp

libglui_a-glui_list.obj: glui/glui_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -MT libglui_a-glui_list.obj -MD -MP -MF $(DEPDIR)/libglui_a-glui_list.Tpo -c -o libglui_a-glui_list.obj `if test -f 'glui/glui_list.cpp'; then $(CYGPATH_W) 'glui/glui_list.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_list.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libglui_a-glui_list.Tpo $(DEPDIR)/libglui_a-glui_list.Po
#	$(AM_V_CXX)source='glui/glui_list.cpp' object='libglui_a-glui_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglui_a_CXXFLAGS) $(CXXFLAGS) -c -o libglui_a-glui_list.obj `if test -f 'glui/glui_list.cpp'; then $(CYGPATH_W) 'glui/glui_list.cpp'; else $(CYGPATH_W) '$(srcdir)/glui/glui_list.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
